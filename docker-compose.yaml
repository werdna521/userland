---
version: '3'
services:
  api:
    container_name: api
    build:
      context: ./userland
    restart: on-failure
    volumes:
      - ./userland/:/app/api
    env_file: .env
    environment:
      - API_PORT=${API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_ADDR=postgres
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SENDINBLUE_SENDER_NAME=${SENDINBLUE_SENDER_NAME}
      - SENDINBLUE_SENDER_EMAIL=${SENDINBLUE_SENDER_EMAIL}
      - SENDINBLUE_API_KEY=${SENDINBLUE_API_KEY}
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - postgres
      - redis
      - adminer
      - migrate
      - kafka

  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: on-failure
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  redis:
    container_name: redis
    image: redis:alpine
    restart: on-failure
    volumes:
      - ./data/redis:/data
    env_file: .env

  adminer:
    container_name: adminer
    image: adminer:standalone
    restart: on-failure
    ports:
      - 8080:8080

  migrate:
    image: migrate/migrate
    restart: on-failure
    volumes:
      - ./db/migrations:/migrations
    command:
      [
        '-path',
        '/migrations',
        '-database',
        'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}?sslmode=disable',
        'up',
      ]
    depends_on:
      - postgres

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    restart: on-failure
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    restart: on-failure
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  kafka-create-topics:
    container_name: kafka-create-topics
    image: bitnami/kafka:latest
    restart: on-failure
    entrypoint: kafka-topics.sh --create --topic ping --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - kafka
