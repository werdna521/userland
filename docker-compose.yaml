---
version: '3'
services:
  api:
    container_name: api
    build: .
    restart: on-failure
    volumes:
      - ./:/app/api
    env_file: .env
    environment:
      - API_PORT=${API_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - postgres
      - adminer
      - migrate
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: on-failure
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
  adminer:
    container_name: adminer
    image: adminer:standalone
    restart: on-failure
    ports:
      - 8080:8080
  migrate:
    image: migrate/migrate
    restart: on-failure
    volumes:
      - ./db/migrations:/migrations
    command:
      [
        '-path',
        '/migrations',
        '-database',
        'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}?sslmode=disable',
        'up',
      ]
    depends_on:
      - postgres
